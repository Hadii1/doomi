// Mocks generated by Mockito 5.3.2 from annotations
// in doomi/test/time_tracker_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:doomi/interfaces/online_storage.dart' as _i2;
import 'package:doomi/models/response.dart' as _i4;
import 'package:doomi/models/database%20models/task.dart' as _i8;
import 'package:doomi/providers/errors_provider.dart' as _i3;
import 'package:doomi/providers/tasks_provider.dart' as _i5;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIOnlineStorage_0 extends _i1.SmartFake
    implements _i2.IOnlineStorage {
  _FakeIOnlineStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeErrorsNotifier_1 extends _i1.SmartFake
    implements _i3.ErrorsNotifier {
  _FakeErrorsNotifier_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2<T> extends _i1.SmartFake implements _i4.Response<T> {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TasksNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTasksNotifier extends _i1.Mock implements _i5.TasksNotifier {
  @override
  _i2.IOnlineStorage get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeIOnlineStorage_0(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeIOnlineStorage_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.IOnlineStorage);
  @override
  _i3.ErrorsNotifier get errorsNotifier => (super.noSuchMethod(
        Invocation.getter(#errorsNotifier),
        returnValue: _FakeErrorsNotifier_1(
          this,
          Invocation.getter(#errorsNotifier),
        ),
        returnValueForMissingStub: _FakeErrorsNotifier_1(
          this,
          Invocation.getter(#errorsNotifier),
        ),
      ) as _i3.ErrorsNotifier);
  @override
  String get project => (super.noSuchMethod(
        Invocation.getter(#project),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set onError(_i6.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i7.Stream<_i4.Response<List<_i8.Task>>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i4.Response<List<_i8.Task>>>.empty(),
        returnValueForMissingStub:
            _i7.Stream<_i4.Response<List<_i8.Task>>>.empty(),
      ) as _i7.Stream<_i4.Response<List<_i8.Task>>>);
  @override
  _i4.Response<List<_i8.Task>> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeResponse_2<List<_i8.Task>>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeResponse_2<List<_i8.Task>>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.Response<List<_i8.Task>>);
  @override
  set state(_i4.Response<List<_i8.Task>>? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Response<List<_i8.Task>> get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _FakeResponse_2<List<_i8.Task>>(
          this,
          Invocation.getter(#debugState),
        ),
        returnValueForMissingStub: _FakeResponse_2<List<_i8.Task>>(
          this,
          Invocation.getter(#debugState),
        ),
      ) as _i4.Response<List<_i8.Task>>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i7.Future<List<_i8.Task>> getTasks() => (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
        ),
        returnValue: _i7.Future<List<_i8.Task>>.value(<_i8.Task>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i8.Task>>.value(<_i8.Task>[]),
      ) as _i7.Future<List<_i8.Task>>);
  @override
  void addTask(_i8.Task? task) => super.noSuchMethod(
        Invocation.method(
          #addTask,
          [task],
        ),
        returnValueForMissingStub: null,
      );
  @override
  Future<void> deleteTask(_i8.Task? t) => super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [t],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> editTask(_i8.Task? edited) => (super.noSuchMethod(
        Invocation.method(
          #editTask,
          [edited],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  bool updateShouldNotify(
    _i4.Response<List<_i8.Task>>? old,
    _i4.Response<List<_i8.Task>>? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i6.RemoveListener addListener(
    _i9.Listener<_i4.Response<List<_i8.Task>>>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i6.RemoveListener);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
